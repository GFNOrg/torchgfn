name: Publish to PyPI

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Extract version from tag
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        # Remove 'v' prefix if present (e.g., v1.0.0 -> 1.0.0)
        VERSION=${VERSION#v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Extracted version: $VERSION"

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Update version in setup.py/pyproject.toml/setup.cfg
      run: |
        # For setup.py
        if [ -f setup.py ]; then
          sed -i "s/version=['\"][^'\"]*['\"/version='$VERSION'/g" setup.py
        fi

        # For pyproject.toml
        if [ -f pyproject.toml ]; then
          sed -i "s/version = ['\"][^'\"]*['\"]/version = \"$VERSION\"/g" pyproject.toml
        fi

        # For setup.cfg
        if [ -f setup.cfg ]; then
          sed -i "s/version = .*/version = $VERSION/g" setup.cfg
        fi

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*