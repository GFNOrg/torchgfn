[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "torchgfn"
packages = [{include = "gfn", from = "src"}]
version = "0.2"
description = "A torch implementation of GFlowNets"
authors = ["Salem Lahou <salemlahlou9@gmail.com>", "Joseph Viviano <joseph@viviano.ca>", "Victor Schmidt <vsch@pm.me>"]
license = "MIT"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
# main deps
python = "^3.10"
einops = ">=0.6.1"
gymnasium = ">=0.28.1"
numpy = ">=1.21.2"
torch = ">=1.9.0"
torchtyping = ">=0.1.4"
# dev deps
pre-commit = { version = "*", optional = true }
pytest = { version = "*", optional = true }
renku-sphinx-theme = { version = "*", optional = true }
sphinx_rtd_theme = { version = "*", optional = true }
sphinx-autoapi = { version = "*", optional = true }
sphinx-math-dollar = { version = "*", optional = true }
sphinx = { version = "*", optional = true }
tox = { version = "*", optional = true }
black = { version = "22.3.0", optional = true }
myst-parser = { version = "*", optional = true }
# scripts deps
tqdm = { version = "*", optional = true }
wandb = { version = "*", optional = true }

[tool.poetry.extras]
dev = [
    "pre-commit",
    "pytest",
    "renku-sphinx-theme",
    "sphinx_rtd_theme",
    "sphinx-autoapi",
    "sphinx-math-dollar",
    "sphinx",
    "tox",
    "black",
    "myst-parser"
]
scripts = ["tqdm", "wandb"]
all = ["pre-commit", "pytest", "renku-sphinx-theme", "sphinx_rtd_theme", "sphinx-autoapi", "sphinx-math-dollar", "sphinx", "tox", "black", "myst-parser", "tqdm", "wandb"]

[project.urls]
"Homepage" = "https://torchgfn.readthedocs.io/en/latest/"
"Bug Tracker" = "https://github.com/saleml/gfn/issues"


# TODO: Could use for examples? Or something else?
# [project.scripts]
# gfn_example = "gfn.examples:main"

[tool.black]
py36 = true
include = '\.pyi?$'
exclude = '''/(\.git|\.hg|\.mypy_cache|\.tox|\.venv|build)/g'''

[tool.tox]
legacy_tox_ini = '''
[tox]
min_version = 4.0
env_list = test_env

[testenv]
deps = pytest
commands = pytest -s
'''

[tool.pyright]
include = [
    "src/gfn/**",
]

exclude = [
    "**/node_modules",
    "**/__pycache__",
]

strict = [

]

typeCheckingMode = "basic"
pythonVersion = "3.10"
typeshedPath = "typeshed"
enableTypeIgnoreComments = true

# This is required as the CI pre-commit does not download the module (i.e. numpy)
# Therefore, we have to ignore missing imports
reportMissingImports = "none"
reportUnknownMemberType = "none"
reportUnknownParameterType = "none"
reportUnknownVariableType = "none"
reportUnknownArgumentType = "none"
reportPrivateUsage = "warning"
reportUntypedFunctionDecorator = "none"
reportMissingTypeStubs = false
reportUnboundVariable = "warning"
reportGeneralTypeIssues = "none"

[tool.pytest.ini_options]


# Black-compatibility enforced.
[tool.isort]
line_length = 89
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
